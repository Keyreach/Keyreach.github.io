<html>
<head>
<title>JSIDE</title>
<meta charset="utf-8"/>
<meta name="viewport" content="width=480,user-scalable=false" />
<style>
* {
	-moz-box-sizing: border-box;
}
html, body {
	margin: 0;
	padding: 0;
	height: 100%;
}
#toolbar {
	position: block;
	width: 100%;
	background: #D8D8D8;
	color: #222;
}
#toolbar div {
	font: 400 12pt "Source Sans Pro", sans-serif;
	padding: 6px;
	cursor: pointer;
	display: inline-block;
}
#toolbar div:hover {
	color: #FFF;
	background: #358;
}
#editor {
	margin: 0px;
	font: 400 10pt "Source Code Pro", monospace;
	padding: 8px;
	width: 100%;
	border: 0;
	border-bottom: 1px solid #888;
	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;
}
#log {
	height: 1px;
	width: 100%;
	font: 400 10pt "Source Code Pro", monospace;
	padding: 8px;
	overflow-y: scroll;
	background: #222;
	color: #ddd;
	position: absolute;
	bottom: 0;
}
</style>
</head>
<body>
<div id=toolbar>
	<span style='float:right' class='act'>
	<div onclick='executor()'>Run (F9)</div>
	<div onclick='document.querySelector("#log").innerHTML=""'>Clear log</div>
	<div onclick='saveSlot()'>Save</div>
	<div onclick='rmSlot()'>Delete</div>
	</span>
	<span id=slots></span>
	<div onclick='nowslot="NEWSLOT";document.querySelector("#editor").value=""; document.title="NEWSLOT // JSIDE"'>New</div>
</div>
<textarea id='editor' spellcheck='false'></textarea>
<div id='log'></div>
</body>
<script>
var ls = localStorage;
var nowslot = 'NEWSLOT';
// elements
var elements = {
	'editor': document.getElementById("editor"),
	'toolbar': document.getElementById("toolbar"),
	'log': document.getElementById("log")
}

function slotMenu(){
	document.querySelector('#slots').innerHTML = '';
	for(i=0;i<ls.length;i++){
		tmp = document.createElement('div');
		tmp.innerHTML = ls.key(i);
		tmp.onclick = function(){ elements.editor.value = ls.getItem(this.innerHTML); nowslot = this.innerHTML; document.title = this.innerHTML+' // JSIDE' };
		document.querySelector('#slots').appendChild(tmp);
	}
}
function saveSlot(){
	ls.setItem(prompt('Slot name',nowslot), elements.editor.value);
	slotMenu();
}
function rmSlot(){
	ls.removeItem(nowslot);
	slotMenu();
}
function executor(){
		elements.log.style.height = '1px';
		sc = document.createElement('script');
		sc.innerHTML = elements.editor.value;
		document.head.appendChild(sc);
}

function adaptivity(){
	elements.editor.style.height = window.innerHeight - elements.toolbar.offsetHeight - elements.log.offsetHeight;
}

window.onkeyup = function(event){
	if(event.keyCode==120){ executor() };
}
window.onerror = function(message, url, linenumber){
	elements.log.style.height = '40%';
	elements.log.innerHTML = 'Error: '+message+' in '+url+' on line '+linenumber+'<br>' + elements.log.innerHTML;
}
elements.editor.onkeydown = function(event){
	if(event.keyCode==9){
		var start = this.selectionStart;
		var end = this.selectionEnd;
		this.value = this.value.substring(0,start) + '\t' + this.value.substring(end);
		this.selectionStart = this.selectionEnd = start + 1;
		event.preventDefault();
	}
}
adaptivity();
slotMenu();
</script>
</html>
